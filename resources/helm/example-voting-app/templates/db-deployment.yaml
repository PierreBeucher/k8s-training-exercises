apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "example-voting-app-chart.fullname" . }}-db
  labels:
    app: db
  {{- include "example-voting-app-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.db.replicas }}
  selector:
    matchLabels:
      app: db
    {{- include "example-voting-app-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: db
      {{- include "example-voting-app-chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          value: {{ quote .Values.db.postgresUser }}
        - name: POSTGRES_PASSWORD
          {{- if .Values.db.postgresPasswordSecret }}
          valueFrom:
            secretKeyRef:
              name: {{ quote .Values.db.postgresPasswordSecret.name }}
              key: {{ quote .Values.db.postgresPasswordSecret.key }}
          {{- else if .Values.db.postgresPassword }}
          value: {{ quote .Values.db.postgresPassword }}
          {{- end }}
        image: {{ .Values.db.image.repository }}:{{ .Values.db.image.tag | default .Chart.AppVersion }}
        name: postgres
        ports:
        - containerPort: 5432
          name: postgres
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-data
      volumes:
      - emptyDir: {}
        name: db-data